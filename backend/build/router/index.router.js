"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const user_router_1 = require("./user.router");
const reqValidation_1 = require("../validation/reqValidation");
const admin_controller_1 = require("../controller/adminController/admin.controller");
const multer_1 = require("../middleware/multer");
const rea_editAdminProfile_vaidation_1 = __importDefault(require("../validation/reqValidation/rea.editAdminProfile.vaidation"));
const authToken_1 = __importDefault(require("../common/authToken"));
const cetogry_controller_1 = require("../controller/adminController/cetogry.controller");
const req_addUser_validation_1 = require("../validation/reqValidation/req.addUser.validation");
const Product_controller_1 = require("../controller/adminController/Product.controller");
const front_router_1 = require("./front.router");
const router = (0, express_1.Router)();
router.get('/', (req, res) => {
    res.send('Hello World!');
});
router.post("/login", reqValidation_1.reqLoginValidation, admin_controller_1.AdminLogin);
router.post('/addAdmin', authToken_1.default, multer_1.upLoadImage.single("profile"), reqValidation_1.reqAddAdminVAlidation, admin_controller_1.AdminAdd);
router.post('/editAdminProfile', authToken_1.default, multer_1.upLoadImage.single("profile"), rea_editAdminProfile_vaidation_1.default, admin_controller_1.AdminEditProfile);
router.get('/allAdmin/:page/:limit/', authToken_1.default, admin_controller_1.AdminAllAdminData);
router.delete('/deleteAdmin/:id/:page/:limit/', authToken_1.default, admin_controller_1.AdminDelete);
router.get('/activeAdmin/:id/:page/:limit/', authToken_1.default, admin_controller_1.AdminActive);
router.post('/addCategory', authToken_1.default, multer_1.upLoadImage.single('categoryImage'), reqValidation_1.reqAddCategoryValidation, cetogry_controller_1.addCategory);
router.get('/allCategory/:page/:limit/', authToken_1.default, cetogry_controller_1.allCategory);
router.get('/activeCategory/:id/:page/:limit/', authToken_1.default, cetogry_controller_1.activeCategory);
router.delete('/deleteCategory/:id/:page/:limit/', authToken_1.default, cetogry_controller_1.deleteCategory);
router.post('/editCategory', authToken_1.default, multer_1.upLoadImage.single('categoryImage'), reqValidation_1.reqEditCategoryValidation, cetogry_controller_1.editCategory);
router.get('/allUser/:page/:limit/', authToken_1.default, admin_controller_1.allUserData);
router.post('/addUser', authToken_1.default, multer_1.upLoadImage.single('userProfile'), req_addUser_validation_1.reqAddUserValidation, admin_controller_1.addUser);
router.get('/activeUser/:id/:page/:limit/', authToken_1.default, admin_controller_1.activeUser);
router.delete('/deleteUser/:id/:page/:limit/', authToken_1.default, admin_controller_1.deleteUser);
router.post("/editProfile", authToken_1.default, multer_1.upLoadImage.single("userProfile"), admin_controller_1.editUser);
router.post("/addProduct", authToken_1.default, multer_1.upLoadImage.fields([{ name: "bannerImage", maxCount: 1 }, { name: "mulImage" }]), reqValidation_1.reqAddProductValidation, Product_controller_1.addProduct);
router.get('/activeProduct/:id/:page/:limit/', authToken_1.default, Product_controller_1.activeProduct);
router.get('/inStockProduct/:id/:page/:limit/', authToken_1.default, Product_controller_1.inStockProduct);
router.delete('/deleteProduct/:id/:page/:limit/', authToken_1.default, Product_controller_1.deleteProduct);
router.get('/allProduct/:page/:limit/', authToken_1.default, Product_controller_1.allProduct);
router.post("/editProduct", authToken_1.default, multer_1.upLoadImage.fields([{ name: "bannerImage", maxCount: 1 }, { name: "mulImage" }]), Product_controller_1.editProduct);
router.use('/user', user_router_1.userRouter);
router.use('/frontend', front_router_1.frontRouter);
exports.default = router;
